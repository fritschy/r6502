pub(crate) const BRK: u8 = 0x00;
pub(crate) const ORA_XIZI: u8 = 0x01;
pub(crate) const ORA_ZP: u8 = 0x05;
pub(crate) const ASL_ZP: u8 = 0x06;
pub(crate) const PHP: u8 = 0x08;
pub(crate) const ORA_IM: u8 = 0x09;
pub(crate) const ASL_ACC: u8 = 0x0A;
pub(crate) const ORA_ABS: u8 = 0x0D;
pub(crate) const ASL_ABS: u8 = 0x0E;
pub(crate) const BPL_REL: u8 = 0x10;
pub(crate) const ORA_ZIYI: u8 = 0x11;
pub(crate) const ORA_XIZ: u8 = 0x15;
pub(crate) const ASL_XIZ: u8 = 0x16;
pub(crate) const CLC: u8 = 0x18;
pub(crate) const ORA_YIA: u8 = 0x19;
pub(crate) const ORA_XIA: u8 = 0x1D;
pub(crate) const ASL_XIA: u8 = 0x1E;
pub(crate) const JSR_ABS: u8 = 0x20;
pub(crate) const AND_XIZI: u8 = 0x21;
pub(crate) const BIT_ZP: u8 = 0x24;
pub(crate) const AND_ZP: u8 = 0x25;
pub(crate) const ROL_ZP: u8 = 0x26;
pub(crate) const PLP: u8 = 0x28;
pub(crate) const AND_IM: u8 = 0x29;
pub(crate) const ROL_ACC: u8 = 0x2A;
pub(crate) const BIT_ABS: u8 = 0x2C;
pub(crate) const AND_ABS: u8 = 0x2D;
pub(crate) const ROL_ABS: u8 = 0x2E;
pub(crate) const BMI_REL: u8 = 0x30;
pub(crate) const AND_ZIYI: u8 = 0x31;
pub(crate) const AND_XIZ: u8 = 0x35;
pub(crate) const ROL_XIZ: u8 = 0x36;
pub(crate) const SEC: u8 = 0x38;
pub(crate) const AND_YIA: u8 = 0x39;
pub(crate) const AND_XIA: u8 = 0x3D;
pub(crate) const ROL_XIA: u8 = 0x3E;
pub(crate) const RTI: u8 = 0x40;
pub(crate) const EOR_XIZI: u8 = 0x41;
pub(crate) const EOR_ZP: u8 = 0x45;
pub(crate) const LSR_ZP: u8 = 0x46;
pub(crate) const PHA: u8 = 0x48;
pub(crate) const EOR_IM: u8 = 0x49;
pub(crate) const LSR_ACC: u8 = 0x4A;
pub(crate) const JMP_ABS: u8 = 0x4C;
pub(crate) const EOR_ABS: u8 = 0x4D;
pub(crate) const LSR_ABS: u8 = 0x4E;
pub(crate) const BVC_REL: u8 = 0x50;
pub(crate) const EOR_ZIYI: u8 = 0x51;
pub(crate) const EOR_XIZ: u8 = 0x55;
pub(crate) const LSR_XIZ: u8 = 0x56;
pub(crate) const CLI: u8 = 0x58;
pub(crate) const EOR_YIA: u8 = 0x59;
pub(crate) const EOR_XIA: u8 = 0x5D;
pub(crate) const LSR_XIA: u8 = 0x5E;
pub(crate) const RTS: u8 = 0x60;
pub(crate) const ADC_XIZI: u8 = 0x61;
pub(crate) const ADC_ZP: u8 = 0x65;
pub(crate) const ROR_ZP: u8 = 0x66;
pub(crate) const PLA: u8 = 0x68;
pub(crate) const ADC_IM: u8 = 0x69;
pub(crate) const ROR_ACC: u8 = 0x6A;
pub(crate) const JMP_ABSI: u8 = 0x6C;
pub(crate) const ADC_ABS: u8 = 0x6D;
pub(crate) const ROR_ABS: u8 = 0x6E;
pub(crate) const BVS_REL: u8 = 0x70;
pub(crate) const ADC_ZIYI: u8 = 0x71;
pub(crate) const ADC_XIZ: u8 = 0x75;
pub(crate) const ROR_XIZ: u8 = 0x76;
pub(crate) const SEI: u8 = 0x78;
pub(crate) const ADC_YIA: u8 = 0x79;
pub(crate) const ADC_XIA: u8 = 0x7D;
pub(crate) const ROR_XIA: u8 = 0x7E;
pub(crate) const STA_XIZI: u8 = 0x81;
pub(crate) const STY_ZP: u8 = 0x84;
pub(crate) const STA_ZP: u8 = 0x85;
pub(crate) const STX_ZP: u8 = 0x86;
pub(crate) const DEY: u8 = 0x88;
pub(crate) const TXA: u8 = 0x8A;
pub(crate) const STY_ABS: u8 = 0x8C;
pub(crate) const STA_ABS: u8 = 0x8D;
pub(crate) const STX_ABS: u8 = 0x8E;
pub(crate) const BCC_REL: u8 = 0x90;
pub(crate) const STA_ZIYI: u8 = 0x91;
pub(crate) const STY_XIZ: u8 = 0x94;
pub(crate) const STA_XIZ: u8 = 0x95;
pub(crate) const STX_YIZ: u8 = 0x96;
pub(crate) const TYA: u8 = 0x98;
pub(crate) const STA_YIA: u8 = 0x99;
pub(crate) const TXS: u8 = 0x9A;
pub(crate) const STA_XIA: u8 = 0x9D;
pub(crate) const LDY_IM: u8 = 0xA0;
pub(crate) const LDA_XIZI: u8 = 0xA1;
pub(crate) const LDX_IM: u8 = 0xA2;
pub(crate) const LDY_ZP: u8 = 0xA4;
pub(crate) const LDA_ZP: u8 = 0xA5;
pub(crate) const LDX_ZP: u8 = 0xA6;
pub(crate) const TAY: u8 = 0xA8;
pub(crate) const LDA_IM: u8 = 0xA9;
pub(crate) const TAX: u8 = 0xAA;
pub(crate) const LDY_ABS: u8 = 0xAC;
pub(crate) const LDA_ABS: u8 = 0xAD;
pub(crate) const LDX_ABS: u8 = 0xAE;
pub(crate) const BCS_REL: u8 = 0xB0;
pub(crate) const LDA_ZIYI: u8 = 0xB1;
pub(crate) const LDY_XIZ: u8 = 0xB4;
pub(crate) const LDA_XIZ: u8 = 0xB5;
pub(crate) const LDX_YIZ: u8 = 0xB6;
pub(crate) const CLV: u8 = 0xB8;
pub(crate) const LDA_YIA: u8 = 0xB9;
pub(crate) const TSX: u8 = 0xBA;
pub(crate) const LDY_XIA: u8 = 0xBC;
pub(crate) const LDA_XIA: u8 = 0xBD;
pub(crate) const LDX_YIA: u8 = 0xBE;
pub(crate) const CPY_IM: u8 = 0xC0;
pub(crate) const CMP_XIZI: u8 = 0xC1;
pub(crate) const CPY_ZP: u8 = 0xC4;
pub(crate) const CMP_ZP: u8 = 0xC5;
pub(crate) const DEC_ZP: u8 = 0xC6;
pub(crate) const INY: u8 = 0xC8;
pub(crate) const CMP_IM: u8 = 0xC9;
pub(crate) const DEX: u8 = 0xCA;
pub(crate) const CPY_ABS: u8 = 0xCC;
pub(crate) const CMP_ABS: u8 = 0xCD;
pub(crate) const DEC_ABS: u8 = 0xCE;
pub(crate) const BNE_REL: u8 = 0xD0;
pub(crate) const CMP_ZIYI: u8 = 0xD1;
pub(crate) const CMP_XIZ: u8 = 0xD5;
pub(crate) const DEC_XIZ: u8 = 0xD6;
pub(crate) const CLD: u8 = 0xD8;
pub(crate) const CMP_YIA: u8 = 0xD9;
pub(crate) const CMP_XIA: u8 = 0xDD;
pub(crate) const DEC_XIA: u8 = 0xDE;
pub(crate) const CPX_IM: u8 = 0xE0;
pub(crate) const SBC_XIZI: u8 = 0xE1;
pub(crate) const CPX_ZP: u8 = 0xE4;
pub(crate) const SBC_ZP: u8 = 0xE5;
pub(crate) const INC_ZP: u8 = 0xE6;
pub(crate) const INX: u8 = 0xE8;
pub(crate) const SBC_IM: u8 = 0xE9;
pub(crate) const NOP: u8 = 0xEA;
pub(crate) const CPX_ABS: u8 = 0xEC;
pub(crate) const SBC_ABS: u8 = 0xED;
pub(crate) const INC_ABS: u8 = 0xEE;
pub(crate) const BEQ_REL: u8 = 0xF0;
pub(crate) const SBC_ZIYI: u8 = 0xF1;
pub(crate) const SBC_XIZ: u8 = 0xF5;
pub(crate) const INC_XIZ: u8 = 0xF6;
pub(crate) const SED: u8 = 0xF8;
pub(crate) const SBC_YIA: u8 = 0xF9;
pub(crate) const SBC_XIA: u8 = 0xFD;
pub(crate) const INC_XIA: u8 = 0xFE;

///// // Undocumented opcodes
///// pub(crate) const ISC_YIA: u8 = 0xFB;
///// pub(crate) const RRA_ABS: u8 = 0x6F;
///// pub(crate) const LAX_ZIYI: u8 = 0xB3;
///// pub(crate) const ISC_XIA: u8 = 0xFF;
